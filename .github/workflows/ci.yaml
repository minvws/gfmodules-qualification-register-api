name: CI

on:
    workflow_dispatch:
    pull_request:
    push:
        branches:
            - main

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    build:
        name: Build
        runs-on: ubuntu-22.04

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Run build action
              uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/poetry-install@main
              with:
                python_version: "3.11"

    lint:
        name: Run code linter
        runs-on: ubuntu-22.04
        needs: build

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Run build action
              uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/poetry-install@main
              with:
                python_version: "3.11"

            - name: Lint
              run: poetry run $(make lint --just-print --silent)

    type-check:
        name: Check static types
        runs-on: ubuntu-22.04
        needs: build

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4


            - name: Run build action
              uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/poetry-install@main
              with:
                python_version: "3.11"

            - name: Check static types
              run: poetry run $(make type-check --just-print --silent)

    safety-check:
        name: Scan packages for vulnerabilities
        runs-on: ubuntu-22.04
        needs: build

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Run build action
              uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/poetry-install@main
              with:
                python_version: "3.11"

            - name: Scan packages for vulnerabilities
              run: poetry run $(make safety-check --just-print --silent)

    spelling-check:
        name: Run spelling check
        runs-on: ubuntu-22.04
        needs: build

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Run build action
              uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/poetry-install@main
              with:
                python_version: "3.11"

            - name: Run spelling check
              run: poetry run $(make spelling-check --just-print --silent)

    test:
        name: Run the tests
        runs-on: ubuntu-22.04
        needs: build

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Run build action
              uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/poetry-install@main
              with:
                python_version: "3.11"

            - name: Run the tests
              run: poetry run $(make test --just-print --silent)

    spectral:
      name: Run spectral checks
      runs-on: ubuntu-22.04
      needs: build

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Setup npm
          uses: actions/setup-node@v4
          with:
            node-version: '20'

        - name: Run build action
          uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/poetry-install@main
          with:
            python_version: "3.11"

        - name: Copy example configuration
          run: cp app.conf.autopilot app.conf

        - name: Run the application silently
          run: poetry run python -m app.main &

        - name: Wait for the application to start
          run: sleep 5

        - name: Download the OpenAPI schema
          run: curl -o openapi.json http://localhost:8507/v1/openapi.json

        - name: Run spectral Lint
          run: npx @stoplight/spectral-cli lint -f stylish -o spectral-report.txt http://localhost:8507/v1/openapi.json

        - name: Set Job Summary
          if: success() || failure()
          run: |
            echo "# Spectral results" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo '```console'  >> $GITHUB_STEP_SUMMARY
            cat spectral-report.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY

        - name: openapi.json as artifact
          if: success() || failure()
          uses: actions/upload-artifact@v4
          with:
            name: openapi
            path: openapi.json
